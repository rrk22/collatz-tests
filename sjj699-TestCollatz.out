==13886== Memcheck, a memory error detector
==13886== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13886== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==13886== Command: ./TestCollatz
==13886== 
Running main() from gtest_main.cc
[==========] Running 13 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 13 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (19 ms)
[ RUN      ] CollatzFixture.read_backwards
[       OK ] CollatzFixture.read_backwards (3 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (36 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (23 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (3 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (42 ms)
[ RUN      ] CollatzFixture.eval_i_gt_j
[       OK ] CollatzFixture.eval_i_gt_j (8520 ms)
[ RUN      ] CollatzFixture.eval_same_num
[       OK ] CollatzFixture.eval_same_num (2 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (6 ms)
[ RUN      ] CollatzFixture.print_out_of_order
[       OK ] CollatzFixture.print_out_of_order (3 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (8 ms)
[ RUN      ] CollatzFixture.solve_large
[       OK ] CollatzFixture.solve_large (2068 ms)
[ RUN      ] CollatzFixture.solve_single
[       OK ] CollatzFixture.solve_single (285 ms)
[----------] 13 tests from CollatzFixture (11029 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 1 test case ran. (11072 ms total)
[  PASSED  ] 13 tests.
==13886== 
==13886== HEAP SUMMARY:
==13886==     in use at exit: 72,704 bytes in 1 blocks
==13886==   total heap usage: 347,191 allocs, 347,190 frees, 11,074,742 bytes allocated
==13886== 
==13886== LEAK SUMMARY:
==13886==    definitely lost: 0 bytes in 0 blocks
==13886==    indirectly lost: 0 bytes in 0 blocks
==13886==      possibly lost: 0 bytes in 0 blocks
==13886==    still reachable: 72,704 bytes in 1 blocks
==13886==         suppressed: 0 bytes in 0 blocks
==13886== Rerun with --leak-check=full to see details of leaked memory
==13886== 
==13886== For counts of detected and suppressed errors, rerun with: -v
==13886== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 47
Branches executed:100.00% of 52
Taken at least once:76.92% of 52
Calls executed:96.43% of 28
Creating 'Collatz.c++.gcov'
